'''
Script for plotting the average cross-validation results (MSE), with std, on 
the drug sensitivity datasets, for all the methods.
'''

import matplotlib.pyplot as plt


''' Method names and performances. '''
method_names = [
    'VB NMF',     'ARD VB NMF',     # 'NMF VB',     'NMF VB ARD',   
    'Gibbs NMF',  'ARD Gibbs NMF',  # 'NMF Gibbs',  'NMF Gibbs ARD', 
    'ICM NMF',    'ARD ICM NMF',    # 'NMF ICM',    'NMF ICM ARD',  
    'NP NMF',                       # 'NMF NP',
    'VB NMTF',    'ARD VB NMTF',    # 'NMTF VB',    'NMTF VB ARD',  
    'Gibbs NMTF', 'ARD Gibbs NMTF', # 'NMTF Gibbs', 'NMTF Gibbs ARD',
    'ICM NMTF',   'ARD ICM NMTF',   # 'NMTF ICM',   'NMTF ICM ARD', 
    'NP NMTF',                      # 'NMTF NP'
]
dataset_names = ['GDSC IC50', 'CTRP EC50', 'CCLE IC50', 'CCLE EC50']

all_performances_gdsc = [
    # NMF VB
    [685.16092497288184, 710.32299686966451, 703.93385350459334, 729.37119838253295, 694.19032120098836, 717.24799410224693, 709.31261131796532, 703.91053316274144, 690.59053883679485, 704.88806250648452], 
    # NMF VB ARD
    [713.19655462934008, 721.31043774315253, 700.61687793361943, 730.50785633227781, 690.44435527527401, 729.89396636405286, 709.25486450030576, 695.87389520876559, 695.26225316353748, 708.63755041867626],
    # NMF Gibbs
    [716.29910393484386, 715.52845829907073, 703.52578259341101, 709.20707278487555, 687.70064858928674, 693.97202369941476, 706.8950503017204, 715.72301076004032, 711.38252527375471, 706.97860147371944],
    # NMF Gibbs ARD
    [694.90346124983796, 715.52250464628071, 704.55305176478714, 714.98213938693993, 725.41797648404577, 714.44915577933818, 712.5503226263927, 698.81184946087126, 698.07307876833954, 706.26266295425569],
    # NMF ICM
    [729.40046288239785, 728.31355919207101, 691.86118903511647, 715.96727421267792, 720.09430651949663, 706.40449970111422, 712.78407670764443, 737.772158316218, 706.05196536035635, 710.02270641901021],
    # NMF ICM ARD
    [719.7824077508526, 702.05393641620196, 716.98226544179477, 721.75595599822327, 707.45450551121269, 704.35809979582973, 711.96780103652907, 725.73787364118584, 708.53767382589353, 699.44186822909819],
    # NMF NP
    [730.41701997684834, 718.47042584753819, 691.32336665982211, 714.46213589158765, 738.65912996317377, 748.30003701209398, 769.34017968955698, 737.41429097546097, 732.87961285661277, 713.64457275090967],
    # NMTF VB
    [709.66736129233709, 765.88214504613325, 746.70025243132341, 772.27745449563452, 745.41642208861413, 746.63416043672657, 778.08389152148902, 748.30816777944619, 714.12790211075958, 743.14504817463092],
    # NMTF VB ARD
    [722.72999079614908, 698.21931545764801, 737.52356589414251, 704.58457565636195, 703.6715710102967, 719.81797714446282, 713.82496427351339, 721.18206084627707, 716.59301318608493, 704.87671708595326],
    # NMTF Gibbs
    [697.72264470755874, 688.59963116138488, 723.68395059119223, 713.2404399255239, 683.51643895492123, 718.74357305822946, 732.69484500181056, 720.24949905023777, 714.61859728166576, 724.46695154334247],
    # NMTF Gibbs ARD
    [722.32214004260163, 715.16731589342203, 707.82099472214759, 707.16863642869293, 733.6826319505052, 690.37086651359289, 707.11946096310135, 708.39868693728738, 722.03579555089505, 709.30341080247854],
    # NMTF ICM
    [732.69212036935778, 703.59373803276731, 721.57547589519618, 715.59296851929923, 735.58494884486913, 714.06157279712954, 709.41793906913722, 692.15251416044828, 733.59594782945101, 722.39377489936044],
    # NMTF ICM ARD
    [749.09358456994858, 728.48867483636559, 751.71321779677794, 710.14552165194539, 720.68132672814818, 718.33961046515481, 744.25440644549565, 746.00363914072398, 750.51510607673333, 754.19888301307026],
    # NMTF NP
    [690.25343057989005, 736.40038711059503, 764.11082576499348, 704.70177120527262, 732.15532917291273, 742.61597904822986, 716.52571979549577, 713.71528194366965, 733.0727564068369, 728.82412387744012],
]
all_performances_ctrp = [
    # NMF VB
    [1,1,1,1,1,1,1,1,1,1],
    # NMF VB ARD
    [1,1,1,1,1,1,1,1,1,1],
    # NMF Gibbs
    [1,1,1,1,1,1,1,1,1,1],
    # NMF Gibbs ARD
    [1,1,1,1,1,1,1,1,1,1],
    # NMF ICM
    [1,1,1,1,1,1,1,1,1,1],
    # NMF ICM ARD
    [1,1,1,1,1,1,1,1,1,1],
    # NMF NP
    [1,1,1,1,1,1,1,1,1,1],
    # NMTF VB
    [1,1,1,1,1,1,1,1,1,1],
    # NMTF VB ARD
    [1,1,1,1,1,1,1,1,1,1],
    # NMTF Gibbs
    [1,1,1,1,1,1,1,1,1,1],
    # NMTF Gibbs ARD
    [1,1,1,1,1,1,1,1,1,1],
    # NMTF ICM
    [1,1,1,1,1,1,1,1,1,1],
    # NMTF ICM ARD
    [1,1,1,1,1,1,1,1,1,1],
    # NMTF NP
    [1,1,1,1,1,1,1,1,1,1],
]
all_performances_ccle_ic = [
    # NMF VB
    [3.9720789894013322, 3.8170365564850659, 3.6499210229609296, 3.8490283145380855, 3.8172488877299311, 3.5288957886829682, 4.2077224017450208, 3.6645050743210836, 3.7340097505327563, 3.7034951548572432],
    # NMF VB ARD
    [3.9341230008757457, 3.5804683350893769, 3.8915206599421599, 4.0198769310758982, 3.5802990852758909, 3.9503080755826612, 3.51446628103752, 3.5707217277660925, 3.6387522318326435, 4.1315576004235375],
    # NMF Gibbs
    [3.9726385129925688, 3.6905317412044547, 3.9871537709792659, 4.0348560269845599, 3.7432313677870099, 3.8136944380156241, 3.8672522302669221, 3.8024552661957869, 3.7895242798169768, 3.8321562318398548],
    # NMF Gibbs ARD
    [4.0085964256623168, 4.0475973186818095, 4.5460155499514139, 3.7970568240953435, 3.735459341238776, 3.6363626997466438, 3.5617912325380034, 4.3412383509603432, 4.1607433992285623, 3.5096307572146777],
    # NMF ICM
    [4.6519798568170057, 4.4968702684399462, 3.709092203662534, 3.7627043415080119, 4.1832893326451561, 4.1673718383278091, 3.9665783383464031, 4.1948540503933209, 4.202207368583549, 4.4114038493032357],
    # NMF ICM ARD
    [4.3686288222453884, 4.3311682723843887, 4.6641262102526042, 4.5541255986612432, 4.2473901076382754, 4.3377123077867674, 4.3415477322299596, 4.1330666868327768, 37.483347847677642, 4.6225731524639064],
    # NMF NP
    [4.5289686236821733, 4.6788235970437455, 4.9883508949265263, 4.4236942593141677, 4.4606970254973106, 4.7671357423427674, 4.3878394180566973, 4.8452296278851152, 4.9123955462874571, 4.5311993955241787],
    # NMTF VB
    [3.6523065891510731, 3.8216858149794004, 3.6546410019254094, 3.481980628342682, 4.0720710671121179, 3.6459081787245249, 3.369286172330515, 4.135173151066903, 3.7697580970474678, 3.5784768744150166],
    # NMTF VB ARD
    [4.0922474564556097, 3.6270839969799167, 4.2364514965820126, 3.6963480243260736, 4.0575307552374307, 4.6991314282355079, 3.5518596879515676, 4.4343623625928803, 4.15637263736616, 4.3441819323478823],
    # NMTF Gibbs
    [3.9613310924949952, 3.8914023429641751, 3.8672234369130294, 3.8139642808632508, 3.8400614319225479, 3.9440852366405408, 3.6125406992585027, 4.0244266825078734, 3.3362547747996003, 4.2459167704654579],
    # NMTF Gibbs ARD
    [3.8484145546860278, 3.6352814835047544, 3.3872165307865543, 3.7473283501635546, 3.8364534381328106, 3.7395090271490679, 3.6139872892524423, 3.5554257790859558, 4.1143340926500009, 4.0106485433932066],
    # NMTF ICM
    [4.2563250129770926, 4.4623709157614986, 3.943990442128412, 3.8975545135269472, 4.2096798612152906, 3.3247916805810629, 3.8477725874726274, 4.1967682427888962, 3.8768194674838443, 3.9124129263810157],
    # NMTF ICM ARD
    [4.470262317576835, 4.4729201110373316, 4.5862636060900686, 4.5471802794964074, 4.3801528579246876, 4.5337416602241909, 4.4773124243312399, 3.957264326310391, 3.8467170838166527, 4.7269246652092445],
    # NMTF NP
    [4.6304446595137048, 4.9235465162556702, 4.7913333338026751, 4.3779593020860954, 5.0114868904478884, 4.4124572167259037, 4.4958582636356885, 4.9008549177447698, 4.5361138040333193, 4.3708927949021055],
]
all_performances_ccle_ec = [
    # NMF VB
    [7.7635341152730151, 8.1150905890000882, 7.49024941184532, 7.7969946114230684, 7.4888921906269132, 8.4313820494996996, 7.9416913514973304, 8.5502630023429411, 7.3679943246588904, 7.7392399237576139],
    # NMF VB ARD
    [7.9460832757380011, 8.4976568428950916, 7.7833103492513915, 7.803305733351305, 9.2894165318836759, 8.4417087184458115, 8.7308541935685771, 7.2611440720720397, 8.4084295012956414, 8.301422048099182],
    # NMF Gibbs
    [8.1119696081407859, 6.9747693770267025, 7.6980277689151997, 8.0099584769392447, 7.5038672913006668, 8.2435582992319336, 7.6497222037829635, 8.4982718177099681, 7.8034920363404234, 7.9984690844992068],
    # NMF Gibbs ARD
    [15.500805212635024, 15.9139366677836, 10.235167627857891, 15.459711323315451, 10.338914018782516, 18.549524546483649, 13.208237467291292, 39.14480651930802, 13.055665958744564, 10.556331804572885],
    # NMF ICM
    [7.7390289899606479, 8.0997098898134983, 7.719768464634476, 7.7004319693594336, 8.4607671577052717, 8.4227683181052431, 8.4287686769689127, 8.0787315970519575, 8.0127739187228872, 7.6308541967454886],
    # NMF ICM ARD
    [8.0074195705199624, 8.5179429385450973, 7.5787478251620435, 7.9014803780578644, 7.5701314875918966, 7.954227094842393, 8.243592949377792, 7.3547210263041416, 7.3855730275499401, 8.3326533264798641],
    # NMF NP
    [100,100,100,100,100,100,100,100,100,100], # [7.5599063440476231, 9.2413241151457601, nan, 7.9991883839883542, 8.7164206760488963, 7.9434997753498733, 7.4988236929760443, 7.4633612918877343, 8.0478603007775291, 7.8903449372307408],
    # NMTF VB
    [7.365986655448574, 7.874070019013427, 8.3830122132781391, 8.2588283076263096, 8.1157124682326724, 7.972082009972425, 7.8100129922528021, 7.1633155206876538, 7.9074240368300126, 8.0960293137059232],
    # NMTF VB ARD
    [7.1961155820854179, 8.4262085243624441, 7.4321812454061336, 8.0422444944967033, 7.8048966101578525, 7.7055482739886552, 7.2389431799010566, 7.4203876888211742, 8.1448620327160235, 6.840323009376454],
    # NMTF Gibbs
    [7.9926255443618617, 8.624363613938284, 7.7330671211851589, 8.4347650990992378, 6.9458305255386588, 8.1726824264717202, 7.8511457672932901, 8.3351960148129471, 7.5125846889590147, 7.7419620762555139],
    # NMTF Gibbs ARD
    [8.1923963305055132, 8.683040252984501, 8.5112618435851104, 8.3044685301731729, 7.5118271589848371, 8.1129946149825845, 9.2285407046732537, 7.9658620723739757, 8.0681921757652972, 7.8951369240462999],
    # NMTF ICM
    [8.0953739488587342, 7.5304203809288541, 6.9896105482273345, 7.1171541086255763, 8.0340267778864813, 8.1057720069606525, 8.8310672661538181, 8.5129046106318995, 8.3559057900858047, 7.2604093971292363],
    # NMTF ICM ARD
    [7.4162397811295078, 7.9378158694574044, 7.6970160869931732, 7.6499571066210326, 7.9714579652783133, 7.5329418555785503, 7.9280816500862841, 7.3239032094959304, 7.4921567916077194, 7.406541491660021],
    # NMTF NP
    [7.9994851540280987, 7.7325016318332764, 8.417766367544349, 7.543812323748746, 8.5186148912376147, 7.9863874285793504, 8.4471704113343531, 7.9447073678589559, 7.4628906545363298, 8.1618865862554877],
]

colours = ['r','m','b','y','g','k','c']


''' Plot settings. '''
figsize = (8.0, 6.0)
nrows, ncols = 4, 1
left, right, bottom, top = 0.035, 0.95, 0.25, 0.98
plot_file = "./boxplot_crossvalidation.png"
showoutliers = False

gdsc_MSE_min,    gdsc_MSE_max,    gdsc_step =    650, 800, 50
ctrp_MSE_min,    ctrp_MSE_max,    ctrp_step =    0, 10, 2
ccle_ic_MSE_min, ccle_ic_MSE_max, ccle_ic_step = 3, 6, 1
ccle_ec_MSE_min, ccle_ec_MSE_max, ccle_ec_step = 5, 20, 5


''' Make the plot. '''
fig, axes = plt.subplots(nrows=nrows, ncols=ncols, figsize=figsize)
fig.subplots_adjust(left=left, right=right, bottom=bottom, top=top)

# Plot the boxplots
x = method_names
bp1 = axes[0].boxplot(x=all_performances_gdsc, patch_artist=False, showfliers=showoutliers, labels=method_names)
bp2 = axes[1].boxplot(x=all_performances_ctrp, patch_artist=False, showfliers=showoutliers, labels=method_names)
bp3 = axes[2].boxplot(x=all_performances_ccle_ic, patch_artist=False, showfliers=showoutliers, labels=method_names)
bp4 = axes[3].boxplot(x=all_performances_ccle_ec, patch_artist=False, showfliers=showoutliers, labels=method_names)

# Set up the y axes - label and limits
for i, (dataset, MSE_min, MSE_max, MSE_step) in enumerate(zip(
    dataset_names,
    [gdsc_MSE_min, ctrp_MSE_min, ccle_ic_MSE_min, ccle_ec_MSE_min],
    [gdsc_MSE_max, ctrp_MSE_max, ccle_ic_MSE_max, ccle_ec_MSE_max],
    [gdsc_step, ctrp_step, ccle_ic_step, ccle_ec_step])):
    
    axes[i].set_ylabel(dataset)
    axes[i].set_yticks(range(MSE_min, MSE_max+1, MSE_step))
    axes[i].set_ylim(MSE_min, MSE_max)
    axes[i].yaxis.tick_right()
    axes[i].yaxis.set_ticks_position('none')

# Turn off x-axis labels for top 3 plots, and xticks for bottom one
for x in range(2+1):
    axes[x].get_xaxis().set_visible(False)
axes[3].xaxis.set_ticks_position('none')

# Transform xlabels into method names
plt.xticks(range(1,len(method_names)+1), rotation=90)

# Make the lines from dashed into straight line
for bp in [bp1, bp2, bp3, bp4]:
    plt.setp(bp['whiskers'], linestyle='-')

# Save plot
plt.savefig(plot_file, dpi=600)